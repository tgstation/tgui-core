import*as t from"react/jsx-runtime";import*as e from"react";import*as r from"../common/math.js";let i=1e3/60;class s extends e.Component{ref=(0,e.createRef)();interval;currentValue=0;constructor(t){super(t);let{initial:e,value:i}=t;void 0!==e&&(0,r.isSafeNumber)(e)?this.currentValue=e:(0,r.isSafeNumber)(i)&&(this.currentValue=i)}componentDidMount(){this.currentValue!==this.props.value&&this.startTicking()}componentWillUnmount(){this.stopTicking()}shouldComponentUpdate(t){return t.value!==this.props.value&&this.startTicking(),!1}startTicking(){void 0===this.interval&&(this.interval=setInterval(()=>this.tick(),i))}stopTicking(){void 0!==this.interval&&(clearInterval(this.interval),this.interval=void 0)}tick(){let{currentValue:t}=this,{value:e}=this.props;(0,r.isSafeNumber)(e)?this.currentValue=.8333*t+.16669999999999996*e:this.stopTicking(),Math.abs(e-this.currentValue)<Math.max(.001,.001*e)&&(this.currentValue=e,this.stopTicking()),this.ref.current&&(this.ref.current.textContent=this.getText())}getText(){let{props:t,currentValue:e}=this,{format:i,value:s}=t;if(!(0,r.isSafeNumber)(s))return String(s);if(i)return i(this.currentValue);let n=String(s).split(".")[1],a=n?n.length:0;return(0,r.toFixed)(e,(0,r.clamp)(a,0,8))}render(){return(0,t.jsx)("span",{ref:this.ref,children:this.getText()})}}export{s as AnimatedNumber};